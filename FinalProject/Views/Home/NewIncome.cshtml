
@{
    ViewBag.Title = "Results";
}
<br />
<style>
    body {
        overflow-x: hidden;
    }

    .w3-border {
        height: 5%;
        width: 50%;
        border: 0.1px solid gray;
    }

    .w3-green {
        background-color: green;
    }

    .w3-red {
        background-color: red;
    }

    ul, menu, dir {
        display: block;
        list-style-type: disc;
        margin-block-start: 0px;
        margin-block-end: 0px;
        margin-inline-start: 0px;
        margin-inline-end: 0px;
        padding-inline-start: opx;
    }
</style>
<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script type="text/javascript">

    window.onload = function () {
        var chart = new CanvasJS.Chart("SexchartContainer",
            {
                theme: "theme2",
                title: {
                    text: "Males and Females in the state of @ViewBag.test1[0]"
                },
                data: [
                    {
                        type: "pie",
                        showInLegend: true,
                        toolTipContent: "{y} - #percent %",
                        yValueFormatString: "0.###",
                        legendText: "{indexLabel}",
                        dataPoints: [
                            { y: @Convert.ToDouble(ViewBag.test1[1]), indexLabel: "Male" },
                            { y: @Convert.ToDouble(ViewBag.test1[2]), indexLabel: "Female" },

                        ]
                    }
                ]
            });
        chart.render();
                var chart = new CanvasJS.Chart("AgechartContainer",
            {
                theme: "theme2",
                title: {
                    text: "Percentile of Age Groups in the state of @ViewBag.test1[0]"
                },
                data: [
                    {
                        type: "pie",
                        showInLegend: true,
                        toolTipContent: "{y} - #percent %",
                        yValueFormatString: "0.###",
                        legendText: "{indexLabel}",
                        dataPoints: [
                            { y: @ViewBag.test1[3], indexLabel: "20 to 24 years:" },
                            { y: @ViewBag.test1[4], indexLabel: "25 to 34 years:" },
                            { y: @ViewBag.test1[5], indexLabel: "35 to 44 years:" },
                            { y: @ViewBag.test1[6], indexLabel: "45 to 54 years:" },
                            { y: @ViewBag.test1[7], indexLabel: "55 to 59 years:" },
                            { y: @ViewBag.test1[8], indexLabel: "60 to 64 years:" },
                            { y: @ViewBag.test1[9], indexLabel: "65 to 74 years:" },
                            { y: @ViewBag.test1[10], indexLabel: "75 to 84 years:" },
                            { y: @ViewBag.test1[11], indexLabel: "85+:" },

                        ]
                    }
                ]
            });
        chart.render();
                var chart = new CanvasJS.Chart("IncomechartContainer",
            {
                theme: "theme2",
                title: {
                    text: "Income in the state of @ViewBag.test1[0]"
                },
                data: [
                    {
                        type: "pie",
                        showInLegend: true,
                        toolTipContent: "{y} - #percent %",
                        yValueFormatString: "0.###",
                        legendText: "{indexLabel}",
                        dataPoints: [
                            { y: @ViewBag.test1[12], indexLabel: "Less than $10,000" },
                            { y: @ViewBag.test1[13], indexLabel: "$10,000 to $14,999" },
                            { y: @ViewBag.test1[14], indexLabel: "$15,000 to $24,999" },
                            { y: @ViewBag.test1[15], indexLabel: "$25,000 to $34,999" },
                            { y: @ViewBag.test1[16], indexLabel: "$35,000 to 49,999" },
                            { y: @ViewBag.test1[17], indexLabel: "$50,000 to $74,999" },
                            { y: @ViewBag.test1[18], indexLabel: "$75,000 to $99,999" },
                            { y: @ViewBag.test1[19], indexLabel: "$100,000 to $149,999" },
                            { y: @ViewBag.test1[20], indexLabel: "$150,000 to $199,999" },
                            { y: @ViewBag.test1[21], indexLabel: "$200,000 +" },
                        ]
                    }
                ]
            });
        chart.render();
        var chart = new CanvasJS.Chart("chartContainer1", {
            animationEnabled: true,
            title: {
                text: "Number of iPhones Sold in Different Quarters"
            },
            axisX: {
                minimum: new Date(2015, 01, 25),
                maximum: new Date(2017, 02, 15),
                valueFormatString: "MMM YY"
            },
            axisY: {
                title: "Number of Sales",
                titleFontColor: "#4F81BC",
                suffix: "mn"
            },
            data: [{
                indexLabelFontColor: "darkSlateGray",
                name: "views",
                type: "area",
                yValueFormatString: "#,##0.0mn",
                dataPoints: [
                    { x: new Date(2015, 02, 1),/*where the data from the api can go*/ y: 74.4, label: "Michigan"/*potential way to compare the states or counties*/ },
                    { x: new Date(2015, 05, 1), y: 61.1, label: "Q2-2015" },
                    { x: new Date(2015, 08, 1), y: 47.0, label: "Q3-2015" },
                    { x: new Date(2015, 11, 1), y: 48.0, label: "Q4-2015" },
                    { x: new Date(2016, 02, 1), y: 74.8, label: "Q1-2016" },
                    { x: new Date(2016, 05, 1), y: 51.1, label: "Q2-2016" },
                    { x: new Date(2016, 08, 1), y: 40.4, label: "Q3-2016" },
                    { x: new Date(2016, 11, 1), y: 45.5, label: "Q4-2016" },
                    { x: new Date(2017, 02, 1), y: 78.3, label: "Q1-2017", indexLabel: "Highest", markerColor: "red" }
                ]
            }]
        });
        chart.render();
    }
</script>
<br />

@{ double oldint1 = Convert.ToDouble(ViewBag.PrevState1[1]);
    double oldint2 = Convert.ToDouble(ViewBag.PrevState1[2]);
    double oldint3 = Convert.ToDouble(ViewBag.PrevState2[27]);

    double oldintm = Convert.ToDouble(ViewBag.PrevState1[22]);
    double oldintmm = Convert.ToDouble(ViewBag.PrevState1[23]);

    double oldpercent = Math.Round((oldint3 / (oldint1 + oldint2)) * 100, 0);

    double oldindex1 = Convert.ToDouble(ViewBag.PrevState1[1]);
    double oldindex2 = Convert.ToDouble(ViewBag.PrevState1[2]);

    double oldUserGender = Convert.ToDouble(ViewBag.PrevState2[27])/*<<<<This is the user gender info*/;

    double oldGenpercent = Math.Round((oldUserGender / (oldindex1 + oldindex2)) * 100, 2);

    double oldindex3 = Convert.ToDouble(ViewBag.PrevState1[3]);
    double oldindex4 = Convert.ToDouble(ViewBag.PrevState1[4]);
    double oldindex5 = Convert.ToDouble(ViewBag.PrevState1[5]);
    double oldindex6 = Convert.ToDouble(ViewBag.PrevState1[6]);
    double oldindex7 = Convert.ToDouble(ViewBag.PrevState1[7]);
    double oldindex8 = Convert.ToDouble(ViewBag.PrevState1[8]);
    double oldindex9 = Convert.ToDouble(ViewBag.PrevState1[9]);
    double oldindex10 = Convert.ToDouble(ViewBag.PrevState1[10]);
    double oldindex11 = Convert.ToDouble(ViewBag.PrevState1[11]);

    double oldUserAge = Convert.ToDouble(ViewBag.PrevState2[28]);  /**/

    double oldAgepercent = Math.Round((oldUserAge / (oldindex3 + oldindex4 + oldindex5 + oldindex6 + oldindex7 + oldindex8 + oldindex9 + oldindex10 + oldindex11)) * 100, 2);

    double oldindex12 = Convert.ToDouble(ViewBag.PrevState1[12]);
    double oldindex13 = Convert.ToDouble(ViewBag.PrevState1[13]);
    double oldindex14 = Convert.ToDouble(ViewBag.PrevState1[14]);
    double oldindex15 = Convert.ToDouble(ViewBag.PrevState1[15]);
    double oldindex16 = Convert.ToDouble(ViewBag.PrevState1[16]);
    double oldindex17 = Convert.ToDouble(ViewBag.PrevState1[17]);
    double oldindex18 = Convert.ToDouble(ViewBag.PrevState1[18]);
    double oldindex19 = Convert.ToDouble(ViewBag.PrevState1[19]);
    double oldindex20 = Convert.ToDouble(ViewBag.PrevState1[20]);
    double oldindex21 = Convert.ToDouble(ViewBag.PrevState1[21]);
    //double oldindex22 = Convert.ToDouble(ViewBag.PrevState1[22]);

    double oldUserIncome = Convert.ToDouble(ViewBag.PrevState2[29]); /*<<<<This is the Income info*/;

    double oldIncomepercent = Math.Round((oldUserIncome / (oldindex12 + oldindex13 + oldindex14 + oldindex15 + oldindex16 + oldindex17 + oldindex18 + oldindex19 + oldindex20 + oldindex21)) * 100, 2);

    double oldrank = Math.Round((((((oldint1 + oldint2)) * oldGenpercent / 100) * oldAgepercent / 100) * oldIncomepercent / 100), 0); // builds the user rank overall for state

    double oldtotalPop = (oldint1 + oldint2);

    double oldtotalEarnings = (ViewBag.IncomeValue * 1.45) * (79 - ViewBag.AgeValue);

    double oldmaritalStatus = Convert.ToDouble(ViewBag.PrevState2[31]);
    double oldMaritalPercent = Math.Round((oldmaritalStatus / (oldintm + oldintmm)) * 100, 2);

    //education numbers:
    double olduserEdu = Convert.ToDouble(ViewBag.PrevState2[29]);
    double oldindex225 = Convert.ToDouble(ViewBag.PrevState2[1]);
    double oldindex226 = Convert.ToDouble(ViewBag.PrevState2[2]);
    double oldindex227 = Convert.ToDouble(ViewBag.PrevState2[3]);
    double oldindex228 = Convert.ToDouble(ViewBag.PrevState2[4]);
    double oldindex229 = Convert.ToDouble(ViewBag.PrevState2[5]);
    double oldEdupercent = Math.Round((olduserEdu / (oldindex225 + oldindex226 + oldindex227 + oldindex228 + oldindex229)) * 100, 2);

    //kid numbers
    double olduserKids = Convert.ToDouble(ViewBag.PrevState2[32]);
    double oldkidIndex = Convert.ToDouble(ViewBag.PrevState1[24]);
    double oldnoKidIndex = Convert.ToDouble(ViewBag.PrevState1[24]) - Convert.ToDouble(ViewBag.test1[25]);
    double oldkidPercent = Math.Round((olduserKids / oldkidIndex) * 100, 2);


    //if( ViewBag.test2[30] == "DP02_0064E" || ViewBag.test2[30] == "DP02_0065E")
    //{
    //    totalEarnings += 17500 * (79 - UserAge);
    //}

    double kidstotal = Convert.ToDouble(ViewBag.test1[24]);
    double noKidIndex = Convert.ToDouble(ViewBag.test1[24]) - Convert.ToDouble(ViewBag.test1[25]);
    double userkids = Convert.ToDouble(ViewBag.test2[32]);
    if (ViewBag.test2[32] == ViewBag.test1[24])
    {
        userkids = noKidIndex;
    }
    double kidPercent = Math.Round((userkids / kidstotal) * 100, 2);
}


<h3>@ViewBag.userData.name in @ViewBag.PrevState1[0]</h3>

<table class="table">
    <tr><th>@ViewBag.userData.name</th><th>Your Info</th><th>Others Like You</th><th>Percentile You're In</th></tr>
    <tr>
        <td>Gender:</td>
        <td>@ViewBag.GenderLabel</td>
        <td>@ViewBag.PrevState2[27]</td>
        <td>@oldGenpercent%</td>
    </tr>
    <tr>
        <td>Age Bracket:</td>
        <td>@ViewBag.AgeLabel</td>
        <td>@ViewBag.PrevState2[28]</td>
        <td>@oldAgepercent%</td>
    </tr>
    <tr>
        <td>Income Bracket:</td>
        <td>@ViewBag.IncomeLabel</td>
        <td>@ViewBag.PrevState2[29]</td>
        <td>@oldIncomepercent%</td>
    </tr>
    <tr>
        <td>Education Level:</td>
        <td>@ViewBag.educationLabels</td>
        <td>@ViewBag.PrevState2[30]</td>
        <td>@oldEdupercent%</td>
    </tr>
    <tr>
    <tr>
        <td>Children:</td>
        <td>@ViewBag.userKidCodeLabel</td>
        <td>@ViewBag.test2[32]</td>
        <td>@kidPercent%</td>
    </tr>
    <tr>
        <td>Marital Status:</td>
        <td>@ViewBag.marriageLabels</td>
        <td>@ViewBag.PrevState2[31]</td>
        <td>@oldMaritalPercent%</td>
    </tr>
    <tr>
        <td>Your rank by State:</td>
        <td>You rank #@oldrank.ToString("###,###,###,###")  of @oldtotalPop.ToString("###,###,###,###") in your state.</td>
        <td></td>
        <td></td>
    </tr>

    <tr>
        <td>Lifetime Earnings:</td>
        <td>$@oldtotalEarnings.ToString("###,###,###,###")</td>
        <td></td>
        <td></td>
    </tr>
</table>
<br />
<br />
@ViewBag.EducationSuggestion
<br />
<br />
@ViewBag.HousingSuggestion

<h3>@ViewBag.userData.name in @ViewBag.test1[0]</h3>
@* beginning of new newstate info *@
@* charts graphs *@
<br />
<ul class="list-inline" style="width: 2009px; padding-right:4%;">
    <li style="width:380px; ">
        <img class="center-block" style="width:80px; height:100px;" src="https://png2.kisspng.com/20180309/qke/kisspng-old-age-download-icon-help-the-old-man-across-the-street-5aa29d192e6bc6.8517958515206064891901.png" />
        <hr style="width:40%; border:1px solid; @*text-align:center;*@" />
        <div id="AgechartContainer" style="height: 300px; width: 100%;"></div>
    </li>
    <li style="width:380px;  ">
        <img class="center-block" style="width:80px; height:80px;" src="https://www.shareicon.net/download/2016/07/30/804328_man_512x512.png" />
        <hr style="width:40%; border:1px solid; @*text-align:center;*@" />
        <div id="SexchartContainer" style="height: 300px; width: 100%;"></div>

    </li>
    <li style="width:380px; ">
        <img class="center-block" style="width:80px; height:110px;" src="http://bankhelpline.com/img/save.png" />
        <hr style="width:40%; border:1px solid; @*text-align:center;*@" />
        <div id="IncomechartContainer" style="height: 300px; width: 100%;"></div>
    </li>
</ul>
@* Table info *@
@{ double int1 = Convert.ToDouble(ViewBag.test1[1]);
    double int2 = Convert.ToDouble(ViewBag.test1[2]);
    double int3 = Convert.ToDouble(ViewBag.test2[27]);

    double intm = Convert.ToDouble(ViewBag.test1[22]);
    double intmm = Convert.ToDouble(ViewBag.test1[23]);
    double percent = Math.Round((int3 / (int1 + int2)) * 100, 0);

    double index1 = Convert.ToDouble(ViewBag.test1[1]);
    double index2 = Convert.ToDouble(ViewBag.test1[2]);
    double UserGender = Convert.ToDouble(ViewBag.test2[27])/*<<<<This is the user gender info*/;
    double Genpercent = Math.Round((UserGender / (index1 + index2)) * 100, 2);

    double index3 = Convert.ToDouble(ViewBag.test1[3]);
    double index4 = Convert.ToDouble(ViewBag.test1[4]);
    double index5 = Convert.ToDouble(ViewBag.test1[5]);
    double index6 = Convert.ToDouble(ViewBag.test1[6]);
    double index7 = Convert.ToDouble(ViewBag.test1[7]);
    double index8 = Convert.ToDouble(ViewBag.test1[8]);
    double index9 = Convert.ToDouble(ViewBag.test1[9]);
    double index10 = Convert.ToDouble(ViewBag.test1[10]);
    double index11 = Convert.ToDouble(ViewBag.test1[11]);
    double UserAge = Convert.ToDouble(ViewBag.test2[28]);  /**/
    double Agepercent = Math.Round((UserAge / (index3 + index4 + index5 + index6 + index7 + index8 + index9 + index10 + index11)) * 100, 2);

    double index12 = Convert.ToDouble(ViewBag.test1[12]);
    double index13 = Convert.ToDouble(ViewBag.test1[13]);
    double index14 = Convert.ToDouble(ViewBag.test1[14]);
    double index15 = Convert.ToDouble(ViewBag.test1[15]);
    double index16 = Convert.ToDouble(ViewBag.test1[16]);
    double index17 = Convert.ToDouble(ViewBag.test1[17]);
    double index18 = Convert.ToDouble(ViewBag.test1[18]);
    double index19 = Convert.ToDouble(ViewBag.test1[19]);
    double index20 = Convert.ToDouble(ViewBag.test1[20]);
    double index21 = Convert.ToDouble(ViewBag.test1[21]);
    double UserIncome = Convert.ToDouble(ViewBag.test2[29]); /*<<<<This is the Income info*/;
    double Incomepercent = Math.Round((UserIncome / (index12 + index13 + index14 + index15 + index16 + index17 + index18 + index19 + index20 + index21)) * 100, 2);

    double rank = Math.Round((((((int1 + int2)) * Genpercent / 100) * Agepercent / 100) * Incomepercent / 100), 0); // builds the user rank overall for state

    double totalPop = (int1 + int2);
    double totalEarnings = (ViewBag.NewIncomeValue * 1.45) * (79 - ViewBag.AgeValue);
    double maritalStatus = Convert.ToDouble(ViewBag.test2[31]);
    double MaritalPercent = Math.Round((maritalStatus / (intm + intmm)) * 100, 2);

    //education numbers:
    double userEdu = Convert.ToDouble(ViewBag.test2[29]);
    double index225 = Convert.ToDouble(ViewBag.test2[1]);
    double index226 = Convert.ToDouble(ViewBag.test2[2]);
    double index227 = Convert.ToDouble(ViewBag.test2[3]);
    double index228 = Convert.ToDouble(ViewBag.test2[4]);
    double index229 = Convert.ToDouble(ViewBag.test2[5]);
    double Edupercent = Math.Round((userEdu / (index225 + index226 + index227 + index228 + index229)) * 100, 2);

    //kid numbers
    double userKids = Convert.ToDouble(ViewBag.test2[32]);
    double kidIndex = Convert.ToDouble(ViewBag.test1[24]);

    //if( ViewBag.test2[30] == "DP02_0064E" || ViewBag.test2[30] == "DP02_0065E")
    //{
    //    totalEarnings += 17500 * (79 - UserAge);
    //}
}


<table class="table">
    <tr><th>Category</th><th>Your Info</th><th>Others Like You</th><th>Percentile You're In</th></tr>
    <tr>
        <td>Gender:</td>
        <td>@ViewBag.GenderLabel</td>
        <td>@ViewBag.test2[27]</td>
        <td>@Genpercent%</td>
    </tr>
    <tr>
        <td>Age Bracket:</td>
        <td>@ViewBag.AgeLabel</td>
        <td>@ViewBag.test2[28]</td>
        <td>@Agepercent%</td>
    </tr>
    <tr>
        <td>Income Bracket:</td>
        <td>@ViewBag.NewIncomeLabel</td>
        <td>@ViewBag.test2[29]</td>
        <td>@Incomepercent%</td>
    </tr>
    <tr>
        <td>Education Level:</td>
        <td>@ViewBag.educationLabels</td>
        <td>@ViewBag.test2[30]</td>
        <td>@Edupercent%</td>
    </tr>
    <tr>
        <td>Marital Status:</td>
        <td>@ViewBag.marriageLabels</td>
        <td>@ViewBag.test2[31]</td>
        <td>@MaritalPercent%</td>
    </tr>
    <tr>
        <td>Children:</td>
        <td>@ViewBag.userKidCodeLabel</td>
        <td>@ViewBag.test2[32]</td>
        <td>@kidPercent%</td>
    </tr>
    <tr>
        <td>Your rank by State:</td>
        <td>You rank #@rank.ToString("###,###,###,###") of @totalPop.ToString("###,###,###,###") in your state.</td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td>Lifetime Earnings:</td>
        <td>$@totalEarnings.ToString("###,###,###,###")</td>
        <td></td>
        <td></td>
    </tr>
</table>
<br />
<br />
<form action="/Home/NewIncome">
    <label>Change your State?</label>
    <select name="stateid">
        @for (int i = 0; i < 50; i++)
        {
            if (ViewBag.StateCodes[i] == ViewBag.UserStateCode)
            {
                <option value="@ViewBag.StateCodes[i]" selected>@ViewBag.StateLabels[i]</option>
            }
            else
            {
                <option value="@ViewBag.StateCodes[i]">@ViewBag.StateLabels[i]</option>
            }

        }
    </select>
    <label>Change your Income?</label>
    <select name="incomerange">
        @for (int i = 0; i < 10; i++)
        {
            if (ViewBag.IncomeCodes[i] == ViewBag.UserIncomeCode)
            {
                <option value="@ViewBag.IncomeCodes[i]" selected>@ViewBag.IncomeLabels[i]</option>
            }
            else
            {
                <option value="@ViewBag.IncomeCodes[i]">@ViewBag.IncomeLabels[i]</option>
            }

        }
    </select>
    <input type="submit" value="Change!" />
</form>

<a href="/Home/Index">Go back to your initial results</a>